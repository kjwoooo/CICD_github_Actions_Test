#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      # SSH 키 설정 단계 추가
#      - name: Setup SSH
#        uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.KJWSTUDY_2024 }}
#          known_hosts: unnecessary
#          if_key_exists: replace
#
#      # Known Hosts 설정
#      - name: Add Known Hosts
#        run: |
#          mkdir -p ~/.ssh
#          ssh-keyscan -H 3.35.141.230 >> ~/.ssh/known_hosts
#          chmod 600 ~/.ssh/known_hosts
#
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: Copy JAR file to server
#        uses: appleboy/scp-action@master
#        with:
#          host: 3.35.141.230
#          username: ubuntu
#          key: ${{ secrets.KJWSTUDY_2024 }}
#          source: "build/libs/cicd_test1-0.0.1-SNAPSHOT.jar"
#          target: "/home/ubuntu/cicdTest"
#          strip_components: 2
#
#      - name: Execute application
#        uses: appleboy/ssh-action@master
#        with:
#          host: 3.35.141.230
#          username: ubuntu
#          key: ${{ secrets.KJWSTUDY_2024 }}
#          script: |
#             java -jar /home/ubuntu/cicdTest/cicd_test1-0.0.1-SNAPSHOT.jar > /home/ubuntu/cicdTest/app.log 2>&1 &
#
#
#
#name: PR 테스트
#
#on:
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build-and-test:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: 코드 체크아웃
#        uses: actions/checkout@v3
#
#      - name: JDK 설정
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: 빌드 및 테스트 실행
#        id: build
#        run: ./gradlew build
#
#      - name: PR 닫기 및 코멘트 달기
#        if: failure()  # 빌드가 실패할 경우 실행
#        env:
#          GITHUB_TOKEN: ${{ secrets.KJWSTUDY_2024 }}  # GitHub Token
#        run: |
#          echo "빌드 및 테스트가 실패했습니다. PR을 닫습니다."
#          COMMENT="빌드 및 테스트가 실패했습니다. PR을 닫습니다."
#          PR_URL="${{ github.event.pull_request.url }}"
#
#          # 코멘트 달기
#          curl --http1.1 -X POST -H "Authorization: token $GITHUB_TOKEN" \
#          -H "Accept: application/vnd.github.v3+json" \
#          "${PR_URL}/comments" \
#          -d "{\"body\": \"$COMMENT\"}"
#
#          # PR 닫기
#          curl --http1.1 -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
#          -H "Accept: application/vnd.github.v3+json" \
#          "${PR_URL}" \
#          -d "{\"state\": \"closed\"}"
#


name: PR 테스트

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐시
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle 권한 설정
        run: chmod +x ./gradlew

      - name: 빌드 및 테스트 실행
        id: build
        run: ./gradlew build
        continue-on-error: true

      - name: PR 실패 시 코멘트 및 종료
        if: steps.build.outcome == 'failure'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.KJWSTUDY_2024 }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '⚠️ 빌드 또는 테스트가 실패했습니다. 코드를 확인해주세요.'
            });
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              state: 'closed'
            });

      - name: PR 성공 시 코멘트
        if: steps.build.outcome == 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.KJWSTUDY_2024 }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '✅ 빌드 및 테스트가 성공적으로 완료되었습니다!'
            });