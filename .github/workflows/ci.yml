#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      # SSH 키 설정 단계 추가
#      - name: Setup SSH
#        uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.KJWSTUDY_2024 }}
#          known_hosts: unnecessary
#          if_key_exists: replace
#
#      # Known Hosts 설정
#      - name: Add Known Hosts
#        run: |
#          mkdir -p ~/.ssh
#          ssh-keyscan -H 3.35.141.230 >> ~/.ssh/known_hosts
#          chmod 600 ~/.ssh/known_hosts
#
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: Copy JAR file to server
#        uses: appleboy/scp-action@master
#        with:
#          host: 3.35.141.230
#          username: ubuntu
#          key: ${{ secrets.KJWSTUDY_2024 }}
#          source: "build/libs/cicd_test1-0.0.1-SNAPSHOT.jar"
#          target: "/home/ubuntu/cicdTest"
#          strip_components: 2
#
#      - name: Execute application
#        uses: appleboy/ssh-action@master
#        with:
#          host: 3.35.141.230
#          username: ubuntu
#          key: ${{ secrets.KJWSTUDY_2024 }}
#          script: |
#             java -jar /home/ubuntu/cicdTest/cicd_test1-0.0.1-SNAPSHOT.jar > /home/ubuntu/cicdTest/app.log 2>&1 &
#
#
#
#
#name: PR 테스트
#
#on:
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: 코드 체크아웃
#        uses: actions/checkout@v3
#
#      - name: JDK 설정
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Gradle 캐시 # Gradle 캐시를 통해 빌드 속도를 줄임
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Gradle 권한 설정
#        run: chmod +x ./gradlew
#
#      - name: 빌드 실행 (테스트 제외)
#        id: build
#        continue-on-error: true # 빌드가 실패해도 워크플로우 계속 진행
#        run: |
#          if ./gradlew build -x test; then
#            echo "BUILD_STATUS=success" >> $GITHUB_ENV
#          else
#            echo "BUILD_STATUS=failure" >> $GITHUB_ENV
#          fi
#      - name: 빌드 실패 시 코멘트
#        if: env.BUILD_STATUS == 'failure'
#        uses: peter-evans/create-or-update-comment@v3
#        with:
#          token: ${{ secrets.MY_GITHUB_TOKEN }}  # 토큰 설정
#          issue-number: ${{ github.event.pull_request.number }}
#          body: |
#            🔴 빌드에 실패했습니다.😭 코드를 확인해주세요!
#      - name: PR 실패 시 종료
#        if: env.BUILD_STATUS == 'failure'
#        uses: peter-evans/close-pull@v3
#        with:
#          token: ${{ secrets.MY_GITHUB_TOKEN }}
#          pull-request-number: ${{ github.event.pull_request.number }}
#          comment: ❌ 빌드 또는 테스트 실패로 PR이 종료되었습니다.
#
#  test:
#    runs-on: ubuntu-latest
#    needs: build  # 빌드가 성공해야만 테스트가 실행
#    steps:
#      - name: 코드 체크아웃
#        uses: actions/checkout@v3
#
#      - name: JDK 설정
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Gradle 캐시
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#      - name: Gradle 권한 설정
#        run: chmod +x ./gradlew
#
#      - name: 테스트 실행
#        run: ./gradlew test
#
#      - name: 테스트 실패 시 코멘트
#        if: failure()
#        uses: peter-evans/create-or-update-comment@v3
#        with:
#          token: ${{ secrets.MY_GITHUB_TOKEN }}
#          issue-number: ${{ github.event.pull_request.number }}
#          body: |
#            🔴 테스트가 실패했습니다.😭 코드를 확인해주세요!
#      - name: PR 실패 시 종료
#        if: failure()
#        uses: peter-evans/close-pull@v3
#        with:
#          token: ${{ secrets.MY_GITHUB_TOKEN }}
#          pull-request-number: ${{ github.event.pull_request.number }}
#          comment: ❌ 빌드 또는 테스트 실패로 PR이 종료되었습니다.



name: PR 테스트

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 의존성 캐시 최적화
      - name: Gradle 의존성 캐시
        id: gradle-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
            !~/.gradle/caches/transforms-*
            !~/.gradle/caches/journal-*
            !**.lock
          key: ${{ runner.os }}-gradle-deps-${{ hashFiles('**/build.gradle', '**/build.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-deps-

      # 빌드 캐시 최적화
      - name: Gradle 빌드 캐시
        uses: actions/cache@v3
        with:
          path: |
            build
            **/build
          key: ${{ runner.os }}-gradle-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-build-

      - name: Gradle 권한 설정
        run: chmod +x ./gradlew

      # Gradle 설정 최적화
      - name: Gradle 설정
        run: |
          echo "org.gradle.caching=true" >> gradle.properties
          echo "org.gradle.parallel=true" >> gradle.properties
          echo "org.gradle.daemon=false" >> gradle.properties
          echo "org.gradle.configureondemand=true" >> gradle.properties
          echo "org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=512m" >> gradle.properties

      - name: 빌드 실행 (테스트 제외)
        id: build
        continue-on-error: true
        run: |
          ./gradlew build -x test --parallel --build-cache --console=plain
          BUILD_EXIT_CODE=$?
          if [ $BUILD_EXIT_CODE -eq 0 ]; then
            echo "BUILD_STATUS=success" >> $GITHUB_ENV
          else
            echo "BUILD_STATUS=failure" >> $GITHUB_ENV
          fi

      - name: 빌드 실패 시 코멘트
        if: env.BUILD_STATUS == 'failure'
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🔴 빌드에 실패했습니다.😭 코드를 확인해주세요!

      - name: PR 실패 시 종료
        if: env.BUILD_STATUS == 'failure'
        uses: peter-evans/close-pull@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          comment: ❌ 빌드 또는 테스트 실패로 PR이 종료되었습니다.

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 테스트에도 동일한 캐시 적용
      - name: Gradle 의존성 캐시
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
            !~/.gradle/caches/transforms-*
            !~/.gradle/caches/journal-*
            !**.lock
          key: ${{ runner.os }}-gradle-deps-${{ hashFiles('**/build.gradle', '**/build.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-deps-

      - name: Gradle 빌드 캐시
        uses: actions/cache@v3
        with:
          path: |
            build
            **/build
          key: ${{ runner.os }}-gradle-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-build-

      - name: Gradle 권한 설정
        run: chmod +x ./gradlew

      - name: 테스트 실행
        run: ./gradlew test --parallel --build-cache --console=plain

      - name: 테스트 실패 시 코멘트
        if: failure()
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🔴 테스트가 실패했습니다.😭 코드를 확인해주세요!

      - name: PR 실패 시 종료
        if: failure()
        uses: peter-evans/close-pull@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          comment: ❌ 빌드 또는 테스트 실패로 PR이 종료되었습니다.